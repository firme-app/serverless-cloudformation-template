AWSTemplateFormatVersion: 2010-09-09

Description: The AWS CloudFormation template for building a CICD pipeline for cross account deployment to S3 bucket.

Parameters:
  # Account Id of the deployment target.
  TargetAccountID:
    Description: Account ID of the target account where the deployment will happen.
    Type: String
    ConstraintDescription: Must be a valid AWS Account ID without hyphens.
    AllowedPattern: '\d{12}'
    MinLength: 12
    MaxLength: 12
  # Cross Account Role to be assumed by code pipeline to carry out deployment
  CodePipelineAssumeRoleName:
    Type: String
    Description: Cross Account Role to be assumed by code pipeline to carry out deployment
    Default: cross-account-role-serverless-deployment
  # Cloudformation Service Role to create serverless resources
  CFExecutionRoleName:
    Type: String
    Description: Cross Account Role to be assumed by Cloudformation Service to create serverless resources
    Default: cf-execution-role-serverless
  # Deployment Target Environment
  DeploymentEnvironment:
    Type: String
    Description: Select name of the environment to which the pipeline is deploying.
    Default: Development
    AllowedValues:
      - Development
      - Staging
      - Production

  ################################ NEW GITHUB REPOSITORY ##########################

  # *** This value must always be passed in when creating / updating stack
  # "NoEcho" is set to true, for security, so token won't be visible when examining the resulting stack
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    AllowedPattern: "[A-Za-z0-9_]*"

  # *** The remaining parameters should either be:
  # - overridden via changing "Default" here (PREFERABLE, since then they're in source control)
  # - or you can pass them in when creating / updating the stack

  # *** The owner of the Github repo for this application.
  GitHubOwner:
    Type: String
    Default: firme-app
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepo:
    Type: String
    Default: file-manager

  GitHubBranch:
    Type: String
    Default: develop
    AllowedValues:
      - develop
      - staging
      - main

Resources:
  # 'GithubWebhook' satisfies two requirements:
  # -- Means that updates are pushed from GitHub, rather than AWS having to poll
  # -- Means we can filter for required changes
  GithubWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: "true"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodeDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        !Join [
          "-",
          [
            "Serverless-CodeBuild-Deploy",
            !Ref GitHubRepo,
            !Join ["-", !Split ["/", !Ref GitHubBranch]],
          ],
        ]
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      ServiceRole: !Sub arn:aws:iam::${AWS::AccountId}:role/Serverless-CodeBuild-Role-${TargetAccountID}
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:6.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: CROSS_ACCOUNT_ROLE
            Type: PLAINTEXT
            Value: !Sub "arn:aws:iam::${TargetAccountID}:role/${CodePipelineAssumeRoleName}"
          - Name: CF_EXECUTION_ROLE
            Type: PLAINTEXT
            Value: !Sub "arn:aws:iam::${TargetAccountID}:role/${CFExecutionRoleName}"
          - Name: TARGET_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref TargetAccountID
          - Name: STAGE
            Type: PLAINTEXT
            Value: !Ref DeploymentEnvironment

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        !Join [
          "-",
          [
            "Serverless-CodePipeline",
            !Ref GitHubRepo,
            !Join ["-", !Split ["/", !Ref GitHubBranch]],
          ],
        ]
      ArtifactStore:
        Location: !Ref CodePipelineS3Bucket
        Type: S3
      RestartExecutionOnUpdate: True
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/Serverless-CodePipeline-Role-${TargetAccountID}
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              RunOrder: 10
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GitHubOAuthToken
        - Name: Deploy
          Actions:
            - Name: Deploy-Lambda
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 20
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: DeployArtifact
              Configuration:
                ProjectName: !Ref CodeDeploy

  ############################# PRE-REQUISITES FOR PIPELINE ################################
  CodePipelineKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS key for pipeline S3 bucket encryption
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: serverless-codepipeline-key
        Statement:
          - Sid: KmsAllowKeyAdministration
            Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource: "*"
          - Sid: KmsAllowKeyUsage
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:role/Serverless-CodePipeline-Role-${TargetAccountID}
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlainText
              - kms:ReEncrypt
              - kms:ReEncryptTo
              - kms:ReEncryptFrom
              - kms:TagResource
              - kms:CreateKey
            Resource: "*"

  CodePipelineKMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/serverless-codepipeline-key-${GitHubRepo}-${GitHubBranch}
      TargetKeyId: !GetAtt CodePipelineKMSKey.Arn

  CodePipelineS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Join ["-", [!Ref GitHubRepo, !Ref GitHubBranch, !Ref TargetAccountID]]
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          - Id: LccRule1-ExpireAllNoncurrentIn8Days
            NoncurrentVersionExpirationInDays: 8
            Prefix: ""
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !GetAtt CodePipelineKMSKey.Arn
              SSEAlgorithm: aws:kms

  CodePipelineS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CodePipelineS3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:List*
              - s3:Get*
              - s3:Put*
              - s3:Delete*
              - s3:AbortMultipartUpload
              - s3:RestoreObject
              - s3:ListMultipartUploadParts
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${CodePipelineS3Bucket}
              - !Sub arn:aws:s3:::${CodePipelineS3Bucket}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:role/Serverless-CodePipeline-Role-${TargetAccountID}
  ############################### END PRE-REQUISITES ######################################

Outputs:
  OutCodePipeline:
    Description: CICD Pipeline Name
    Value: !Ref CodePipeline
    Export:
      Name: !Sub Serverless-CodePipelineName-${GitHubRepo}-${GitHubBranch}
  OutCodePipelineURL:
    Value: !Sub "https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${CodePipeline}"
    Export:
      Name: !Sub Serverless-CodePipelineUrl-${GitHubRepo}-${GitHubBranch}
  OutCodePipelineKMSKeyArn:
    Value: !GetAtt CodePipelineKMSKey.Arn
    Description: ARN for Pipeline KMS Key
    Export:
      Name: !Sub Serverless-CodePipelineKMSKeyArn-${GitHubRepo}-${GitHubBranch}
  OutCodePipelineS3Bucket:
    Value: !Ref CodePipelineS3Bucket
    Description: Name of CodePipeline S3 Bucket
    Export:
      Name: !Sub Serverless-CodePipelineS3BucketName-${GitHubRepo}-${GitHubBranch}
  OutCodePipelineS3BucketArn:
    Value: !GetAtt CodePipelineS3Bucket.Arn
    Description: ARN of CodePipeline S3 Bucket
    Export:
      Name: !Sub Serverless-CodePipelineS3BucketArn-${GitHubRepo}-${GitHubBranch}
